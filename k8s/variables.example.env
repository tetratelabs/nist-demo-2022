# Environment variables to be configured when deploying
# the demo to Kubernetes

### Docker images ###

# Docker registry where the application images will be deployed
export HUB=

# Istio 1.12 does not yet support imagePullSecrets in
# WasmPlugins to pull images from private registries.
# We need to push the WASM patch to a public Docker registry.
export WASM_HUB=docker.io/nacx

# Tag used when building all images
export TAG=0.1


### Auth0 configuration ###

# OIDC credentials
export OIDC_CLIENT_ID=
export OIDC_CLIENT_SECRET=

# Auth0 application domain.
# Go to your Application settings in Auth0 and set the
# value of the 'Domain' field here (prefixed with https://).
export AUTH0_URL=https://<auth0 app domain>


### Application configuration ###

# Email of your Google Cloud account
export EMAIL=

# Google Cloud project where the Kubernetes cluster is running
export PROJECT_ID=

# Custom domain name for your application:
#  - If you are using the 'local' mode, set it to "localhost"
#  - If you have a public DNS managed in Google Cloud DNS, set it
#    to the domain name where the application will be exposed.
#    This hostname will be configurad in the Istio ingress gateway.
#    For example: myapp.example.com
export DOMAIN=localhost

# Custom port for your application.
#  - In 'local' mode set it to ':8443' (including the leading ':')
#  - In 'gke' mode, set it to an empty value. It is important that the
#    variable EXISTS with an empty value.
export DOMAIN_PORT=:8443

# If you are using the Cloud DNS deployment, configure here the name
# of the DNS zone the application domain belongs to.
# For example: example.com
export DNS_ZONE=

# Fixture to make sure the Istio Ingress Gateway is properly configured
# when using the 'local' mode. Do not remove.
export INGRESS_HOST=$DOMAIN
if [[ "$DOMAIN" == "localhost" ]]; then
    export INGRESS_HOST='*'
fi
